{"version":3,"sources":["resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/charSearchForm/CharSearchForm.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js"],"names":["View","char","name","description","thumbnail","homepage","wiki","imgStyle","objectFit","className","src","alt","style","href","RandomChar","useState","setChar","useMarvelService","loading","error","getCharacter","clearError","onCharLoaded","useEffect","updateChar","timerId","setInterval","clearInterval","id","Math","floor","random","then","errorMessage","ErrorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharlist","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","getAllCharacters","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","items","arr","map","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","display","Skeleton","comics","CharInfo","charId","skeleton","CharSearchForm","getCharacterByName","results","to","initialValues","charName","validationSchema","Yup","required","onSubmit","htmlFor","type","placeholder","component","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","MainPage","selectedChar","decoration","width","height","margin","img","setLoading","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","useHttp","_apiBase","_apiKey","res","_transformCharacter","getAllComics","_transformComics","getComic","slice","path","extension","urls","title","pageCount","language","textObjects","price","prices"],"mappings":"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","file":"static/js/5.09324c72.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nimport './randomChar.scss';\r\n\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\n\r\nconst RandomChar = () => {\r\n\tconst [char, setChar] = useState(null);\r\n\r\n\tconst { loading, error, getCharacter, clearError } = useMarvelService();\r\n\r\n\tconst onCharLoaded = (char) => {\r\n\t\tsetChar(char);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tupdateChar();\r\n\t\tconst timerId = setInterval(updateChar, 50000);\r\n\t\treturn () => {\r\n\t\t\tclearInterval(timerId);\r\n\t\t};\r\n\t}, []);\r\n\r\n\tconst updateChar = () => {\r\n\t\tclearError();\r\n\t\tconst id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n\t\tgetCharacter(id).then(onCharLoaded);\r\n\t};\r\n\r\n\tconst errorMessage = error ? <ErrorMessage /> : null;\r\n\tconst spinner = loading ? <Spinner /> : null;\r\n\tconst content = !(loading || error || !char) ? <View char={char} /> : null;\r\n\r\n\treturn (\r\n\t\t<div className=\"randomchar\">\r\n\t\t\t{errorMessage}\r\n\t\t\t{spinner}\r\n\t\t\t{content}\r\n\t\t\t<div className=\"randomchar__static\">\r\n\t\t\t\t<p className=\"randomchar__title\">\r\n\t\t\t\t\tRandom character for today!\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tDo you want to get to know him better?\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className=\"randomchar__title\">Or choose another one</p>\r\n\t\t\t\t<button onClick={updateChar} className=\"button button__main\">\r\n\t\t\t\t\t<div className=\"inner\">try it</div>\r\n\t\t\t\t</button>\r\n\t\t\t\t<img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n//простой рендарищий компонент, в нем нет логики\r\nconst View = ({ char }) => {\r\n\tconst { name, description, thumbnail, homepage, wiki } = char;\r\n\r\n\tlet imgStyle = { objectFit: 'cover' };\r\n\tif (\r\n\t\tthumbnail ===\r\n\t\t'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\r\n\t) {\r\n\t\timgStyle = { objectFit: 'contain' };\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"randomchar__block\">\r\n\t\t\t<img\r\n\t\t\t\tsrc={thumbnail}\r\n\t\t\t\talt=\"Random character\"\r\n\t\t\t\tclassName=\"randomchar__img\"\r\n\t\t\t\tstyle={imgStyle}\r\n\t\t\t/>\r\n\t\t\t<div className=\"randomchar__info\">\r\n\t\t\t\t<p className=\"randomchar__name\">{name}</p>\r\n\t\t\t\t<p className=\"randomchar__descr\">{description}</p>\r\n\t\t\t\t<div className=\"randomchar__btns\">\r\n\t\t\t\t\t<a href={homepage} className=\"button button__main\">\r\n\t\t\t\t\t\t<div className=\"inner\">homepage</div>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\r\n\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default RandomChar;\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport './charList.scss';\r\n\r\nconst CharList = (props) => {\r\n\tconst [charList, setCharlist] = useState([]);\r\n\tconst [newItemLoading, setNewItemLoading] = useState(false);\r\n\tconst [offset, setOffset] = useState(210);\r\n\tconst [charEnded, setCharEnded] = useState(false);\r\n\r\n\tconst { loading, error, getAllCharacters } = useMarvelService();\r\n\r\n\tuseEffect(() => {\r\n\t\tonRequest(offset, true);\r\n\t}, []);\r\n\r\n\tconst onRequest = (offset, initial) => {\r\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n\t\tgetAllCharacters(offset).then(onCharListLoaded);\r\n\t};\r\n\r\n\tconst onCharListLoaded = (newCharList) => {\r\n\t\tlet ended = false;\r\n\t\tif (newCharList.length < 9) {\r\n\t\t\tended = true;\r\n\t\t}\r\n\r\n\t\tsetCharlist((charList) => [...charList, ...newCharList]);\r\n\t\tsetNewItemLoading((newItemLoading) => false);\r\n\t\tsetOffset((offset) => offset + 9);\r\n\t\tsetCharEnded((charEnded) => ended);\r\n\t};\r\n\r\n\tconst itemRefs = useRef([]);\r\n\r\n\tconst focusOnItem = (id) => {\r\n\t\titemRefs.current.forEach((item) =>\r\n\t\t\titem.classList.remove('char__item_selected')\r\n\t\t);\r\n\t\titemRefs.current[id].classList.add('char__item_selected');\r\n\t\titemRefs.current[id].focus();\r\n\t};\r\n\r\n\tfunction renderItems(arr) {\r\n\t\tconst items = arr.map((item, i) => {\r\n\t\t\tlet imgStyle = { objectFit: 'cover' };\r\n\t\t\tif (\r\n\t\t\t\titem.thumbnail ===\r\n\t\t\t\t'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\r\n\t\t\t) {\r\n\t\t\t\timgStyle = { objectFit: 'unset' };\r\n\t\t\t}\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<li\r\n\t\t\t\t\tclassName=\"char__item\"\r\n\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\ttabIndex={0}\r\n\t\t\t\t\tref={(el) => (itemRefs.current[i] = el)}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tprops.onCharSelected(item.id);\r\n\t\t\t\t\t\tfocusOnItem(i);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonKeyPress={(e) => {\r\n\t\t\t\t\t\tif (e.key === ' ' || e.key === 'Enter') {\r\n\t\t\t\t\t\t\tprops.onCharSelected(item.id);\r\n\t\t\t\t\t\t\tfocusOnItem(i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<img src={item.thumbnail} alt={item.name} style={imgStyle} />\r\n\t\t\t\t\t<div className=\"char__name\">{item.name}</div>\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t});\r\n\t\t// А эта конструкция вынесена для центровки спиннера/ошибки\r\n\t\treturn <ul className=\"char__grid\">{items}</ul>;\r\n\t}\r\n\r\n\tconst items = renderItems(charList);\r\n\r\n\tconst errorMessage = error ? <ErrorMessage /> : null;\r\n\tconst spinner = loading && !newItemLoading ? <Spinner /> : null;\r\n\r\n\treturn (\r\n\t\t<div className=\"char__list\">\r\n\t\t\t{errorMessage}\r\n\t\t\t{spinner}\r\n\t\t\t{items}\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"button button__main button__long\"\r\n\t\t\t\tdisabled={newItemLoading}\r\n\t\t\t\tstyle={{ display: charEnded ? 'none' : 'block' }}\r\n\t\t\t\tonClick={() => onRequest(offset)}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"inner\">load more</div>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nCharList.propTypes = {\r\n\tonCharSelected: PropTypes.func,\r\n};\r\n\r\nexport default CharList;\r\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Skeleton from '../skeleton/Skeleton';\r\nimport './charInfo.scss';\r\n\r\nconst CharInfo = (props) => {\r\n\tconst [char, setChar] = useState(null);\r\n\r\n\tconst { loading, error, getCharacter, clearError } = useMarvelService();\r\n\r\n\tuseEffect(() => {\r\n\t\tupdateChar();\r\n\t}, [props.charId]);\r\n\r\n\tconst updateChar = () => {\r\n\t\tconst { charId } = props;\r\n\t\tif (!charId) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tclearError();\r\n\t\tgetCharacter(charId).then(onCharLoaded);\r\n\t};\r\n\r\n\tconst onCharLoaded = (char) => {\r\n\t\tsetChar(char);\r\n\t};\r\n\r\n\tconst skeleton = char || loading || error ? null : <Skeleton />;\r\n\tconst errorMessage = error ? <ErrorMessage /> : null;\r\n\tconst spinner = loading ? <Spinner /> : null;\r\n\tconst content = !(loading || error || !char) ? <View char={char} /> : null;\r\n\r\n\treturn (\r\n\t\t<div className=\"char__info\">\r\n\t\t\t{skeleton}\r\n\t\t\t{errorMessage}\r\n\t\t\t{spinner}\r\n\t\t\t{content}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst View = ({ char }) => {\r\n\tconst { name, description, thumbnail, homepage, wiki, comics } = char;\r\n\tlet imgStyle = { objectFit: 'cover' };\r\n\tif (\r\n\t\tthumbnail ===\r\n\t\t'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\r\n\t) {\r\n\t\timgStyle = { objectFit: 'contain' };\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"char__basics\">\r\n\t\t\t\t<img src={thumbnail} alt={name} style={imgStyle} />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"char__info-name\">{name}</div>\r\n\t\t\t\t\t<div className=\"char__btns\">\r\n\t\t\t\t\t\t<a href={homepage} className=\"button button__main\">\r\n\t\t\t\t\t\t\t<div className=\"inner\">homepage</div>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\r\n\t\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"char__descr\">{description}</div>\r\n\t\t\t<div className=\"char__comics\">Comics:</div>\r\n\t\t\t<ul className=\"char__comics-list\">\r\n\t\t\t\t{comics.length > 0 ? null : 'There is no comics with this character'}\r\n\t\t\t\t{comics.map((item, i) => {\r\n\t\t\t\t\t// eslint-disable-next-line\r\n\t\t\t\t\tif (i > 9) return;\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li key={i} className=\"char__comics-item\">\r\n\t\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nCharInfo.propTypes = {\r\n\tcharId: PropTypes.number,\r\n};\r\n\r\nexport default CharInfo;\r\n","import { useState } from 'react';\r\nimport {\r\n\tFormik,\r\n\tForm,\r\n\tField,\r\n\tErrorMessage as FormikErrorMessage,\r\n} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './charSearchForm.scss';\r\n\r\nconst CharSearchForm = () => {\r\n\tconst [char, setChar] = useState(null);\r\n\tconst { loading, error, getCharacterByName, clearError } = useMarvelService();\r\n\r\n\tconst onCharLoaded = (char) => {\r\n\t\tsetChar(char);\r\n\t};\r\n\r\n\tconst updateChar = (name) => {\r\n\t\tclearError();\r\n\r\n\t\tgetCharacterByName(name).then(onCharLoaded);\r\n\t};\r\n\r\n\tconst errorMessage = error ? (\r\n\t\t<div className=\"char__search-critical-error\">\r\n\t\t\t<ErrorMessage />\r\n\t\t</div>\r\n\t) : null;\r\n\tconst results = !char ? null : char.length > 0 ? (\r\n\t\t<div className=\"char__search-wrapper\">\r\n\t\t\t<div className=\"char__search-success\">\r\n\t\t\t\tThere is! Visit {char[0].name} page?\r\n\t\t\t</div>\r\n\t\t\t<Link\r\n\t\t\t\tto={`/characters/${char[0].id}`}\r\n\t\t\t\tclassName=\"button button__secondary\"\r\n\t\t\t>\r\n\t\t\t\t<div className=\"inner\">To page</div>\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t) : (\r\n\t\t<div className=\"char__search-error\">\r\n\t\t\tThe character was not found. Check the name and try again\r\n\t\t</div>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className=\"char__search-form\">\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tcharName: '',\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object({\r\n\t\t\t\t\tcharName: Yup.string().required('This field is required'),\r\n\t\t\t\t})}\r\n\t\t\t\tonSubmit={({ charName }) => {\r\n\t\t\t\t\tupdateChar(charName);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<label className=\"char__search-label\" htmlFor=\"charName\">\r\n\t\t\t\t\t\tOr find a character by name:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<div className=\"char__search-wrapper\">\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\tid=\"charName\"\r\n\t\t\t\t\t\t\tname=\"charName\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter name\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tclassName=\"button button__main\"\r\n\t\t\t\t\t\t\tdisabled={loading}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className=\"inner\">find</div>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<FormikErrorMessage\r\n\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\tclassName=\"char__search-error\"\r\n\t\t\t\t\t\tname=\"charName\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form>\r\n\t\t\t</Formik>\r\n\t\t\t{results}\r\n\t\t\t{errorMessage}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CharSearchForm;\r\n","import { Component } from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n\tstate = {\r\n\t\terror: false,\r\n\t};\r\n\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\tconsole.log(error, errorInfo);\r\n\t\tthis.setState({\r\n\t\t\terror: true,\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.error) {\r\n\t\t\treturn <ErrorMessage />;\r\n\t\t}\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from 'react';\r\n\r\nimport RandomChar from '../randomChar/RandomChar';\r\nimport CharList from '../charList/CharList';\r\nimport CharInfo from '../charInfo/CharInfo';\r\nimport CharSearchForm from '../charSearchForm/CharSearchForm';\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n\tconst [selectedChar, setChar] = useState(null);\r\n\r\n\tconst onCharSelected = (id) => {\r\n\t\tsetChar(id);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<RandomChar />\r\n\t\t\t</ErrorBoundary>\r\n\t\t\t<div className=\"char__content\">\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharList onCharSelected={onCharSelected} />\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CharInfo charId={selectedChar} />\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CharSearchForm />\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default MainPage;\r\n","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\nconst ErrorMessage = () => {\r\n\treturn (\r\n\t\t<img\r\n\t\t\tstyle={{\r\n\t\t\t\tdisplay: 'block',\r\n\t\t\t\twidth: '250px',\r\n\t\t\t\theight: '250px',\r\n\t\t\t\tobjectFit: 'contain',\r\n\t\t\t\tmargin: '0 auto',\r\n\t\t\t}}\r\n\t\t\tsrc={img}\r\n\t\t\talt=\"error\"\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from '../hooks/http.hook';\r\nconst useMarvelService = () => {\r\n\tconst { loading, request, error, clearError } = useHttp();\r\n\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst _apiKey = 'apikey=2e77abbefd9c021797e5106c7312f34b';\r\n\tconst _baseOffset = 210;\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t};\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t};\r\n\r\n\tconst getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t};\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description\r\n\t\t\t\t? `${char.description.slice(0, 210)}...`\r\n\t\t\t\t: 'There is no description for this character',\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t};\r\n\t};\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || 'There is no description',\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: 'No information about the number of pages',\r\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects.language || 'en-us',\r\n\t\t\tprice: comics.prices.price ? `${comics.prices.price}$` : 'not available',\r\n\t\t};\r\n\t};\r\n\r\n\treturn {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n\t\tclearError,\r\n\t\tgetAllComics,\r\n\t\tgetComic,\r\n\t\tgetCharacterByName,\r\n\t};\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst request = useCallback(\r\n\t\tasync (\r\n\t\t\turl,\r\n\t\t\tmethod = 'GET',\r\n\t\t\tbody = null,\r\n\t\t\theaders = { 'Content-Type': 'application/json' }\r\n\t\t) => {\r\n\t\t\tsetLoading(true);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(url, { method, body, headers });\r\n\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst data = await response.json();\r\n\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\treturn data;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetError(e.message);\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\r\n\tconst clearError = useCallback(() => setError(null), []);\r\n\r\n\treturn { loading, request, error, clearError };\r\n};\r\n"],"sourceRoot":""}